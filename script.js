// Firebase Configuration
const firebaseConfig = {
  apiKey: "AIzaSyB7L_ha4apWhMHRGUSQkFG7RFK1MCT4snk",
  authDomain: "data-aeck-tri-an.firebaseapp.com",
  projectId: "data-aeck-tri-an",
  storageBucket: "data-aeck-tri-an.appspot.com",
  messagingSenderId: "35346305667",
  appId: "1:35346305667:web:5722c20978b0a8ac4001b6",
  measurementId: "G-T4KRKX2KW1"
};

// Initialize Firebase
firebase.initializeApp(firebaseConfig);
const db = firebase.firestore();

// Ch·ª©c nƒÉng ƒëi·ªÅu khi·ªÉn √¢m thanh
const audioControl = document.getElementById('audioControl');
const bgMusic = document.getElementById('bgMusic');
let isPlaying = false;

audioControl.addEventListener('click', function() {
  if (isPlaying) {
    bgMusic.pause();
    audioControl.textContent = 'üîá';
    audioControl.classList.remove('playing');
    isPlaying = false;
  } else {
    bgMusic.play().catch(function(error) {
      console.log('Kh√¥ng th·ªÉ ph√°t nh·∫°c:', error);
    });
    audioControl.textContent = 'üîä';
    audioControl.classList.add('playing');
    isPlaying = true;
  }
});

// T·ª± ƒë·ªông ph√°t nh·∫°c khi trang load (n·∫øu tr√¨nh duy·ªát cho ph√©p)
document.addEventListener('DOMContentLoaded', function() {
  // Th·ª≠ ph√°t nh·∫°c t·ª± ƒë·ªông
  bgMusic.play().then(function() {
    audioControl.textContent = 'üîä';
    audioControl.classList.add('playing');
    isPlaying = true;
  }).catch(function(error) {
    console.log('Kh√¥ng th·ªÉ t·ª± ƒë·ªông ph√°t nh·∫°c:', error);
    // Gi·ªØ nguy√™n tr·∫°ng th√°i t·∫Øt
  });
});

// Ch·ª©c nƒÉng Modal ghi danh
const registerBtn = document.getElementById('registerBtn');
const modalOverlay = document.getElementById('modalOverlay');
const closeModal = document.getElementById('closeModal');
const cancelBtn = document.getElementById('cancelBtn');
const registerForm = document.getElementById('registerForm');

// M·ªü modal
registerBtn.addEventListener('click', function() {
  modalOverlay.classList.add('show');
  document.body.style.overflow = 'hidden'; // NgƒÉn scroll
});

// ƒê√≥ng modal
function closeModalFunc() {
  modalOverlay.classList.remove('show');
  document.body.style.overflow = 'auto'; // Cho ph√©p scroll l·∫°i
  registerForm.reset(); // Reset form
}

closeModal.addEventListener('click', closeModalFunc);
cancelBtn.addEventListener('click', closeModalFunc);

// ƒê√≥ng modal khi click b√™n ngo√†i
modalOverlay.addEventListener('click', function(e) {
  if (e.target === modalOverlay) {
    closeModalFunc();
  }
});

// X·ª≠ l√Ω form submit
registerForm.addEventListener('submit', function(e) {
  e.preventDefault();
  
  const studentName = document.getElementById('studentName').value.trim();
  const studentWish = document.getElementById('studentWish').value.trim();
  const studentMessage = document.getElementById('studentMessage').value.trim();
  
  if (!studentName || !studentWish) {
    alert('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin!');
    return;
  }
  
  // Disable submit button ƒë·ªÉ tr√°nh spam
  const submitBtn = registerForm.querySelector('.btn-submit');
  submitBtn.disabled = true;
  submitBtn.textContent = 'ƒêang g·ª≠i...';
  
  // T·∫°o object d·ªØ li·ªáu h·ªçc sinh
  const newStudent = {
    name: studentName,
    wish: studentWish,
    message: studentMessage,
    date: new Date().toISOString(),
    timestamp: firebase.firestore.FieldValue.serverTimestamp()
  };
  
  // L∆∞u v√†o Firebase
  saveStudentToFirebase(newStudent);
});

// L∆∞u h·ªçc sinh v√†o Firebase
async function saveStudentToFirebase(student) {
  try {
    // L·∫•y s·ªë th·ª© t·ª± hi·ªán t·∫°i (d·ª±a tr√™n s·ªë l∆∞·ª£ng l·ªùi ch√∫c m·∫∑c ƒë·ªãnh + s·ªë h·ªçc sinh ƒë√£ ghi danh)
    const snapshot = await db.collection('students').orderBy('timestamp', 'asc').get();
    const stt = messages.length + snapshot.size + 1;
    await db.collection('students').add(student);
    addStudentToList(student, false, stt);
    showSuccessMessage(stt);
    closeModalFunc();
  } catch (error) {
    console.error('L·ªói khi l∆∞u d·ªØ li·ªáu:', error);
    alert('C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i!');
    const submitBtn = document.querySelector('.btn-submit');
    submitBtn.disabled = false;
    submitBtn.textContent = 'G·ª≠i L·ªùi Ch√∫c ‚ú®';
  }
}

function showSuccessMessage(stt) {
  const successDiv = document.createElement('div');
  successDiv.className = 'success-message';
  successDiv.innerHTML = `
    <div class="success-content">
      <h3>üéâ ƒêƒÉng k√Ω th√†nh c√¥ng!</h3>
      <p>B·∫°n l√† ng∆∞·ªùi ghi danh s·ªë <b style='color:#d32f2f;font-size:1.3em;'>#${stt}</b>! H√£y nh·ªõ s·ªë n√†y ƒë·ªÉ tra c·ª©u v√† nh·∫≠n l·ªùi ch√∫c nh√©.<br>AECK s·∫Ω g·ª≠i l·ªùi ch√∫c t·ªët ƒë·∫πp nh·∫•t ƒë·∫øn b·∫°n!</p>
      <button onclick="this.parentElement.parentElement.remove()">ƒê√≥ng</button>
    </div>
  `;
  successDiv.style.cssText = `
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 3000;
    animation: fadeIn 0.3s ease;
  `;
  const successContent = successDiv.querySelector('.success-content');
  successContent.style.cssText = `
    background: white;
    padding: 30px;
    border-radius: 15px;
    text-align: center;
    max-width: 400px;
    margin: 20px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  `;
  successContent.querySelector('button').style.cssText = `
    background: linear-gradient(135deg, #ff5252 0%, #d32f2f 100%);
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 8px;
    cursor: pointer;
    margin-top: 15px;
    font-weight: 600;
  `;
  document.body.appendChild(successDiv);
  setTimeout(() => {
    if (successDiv.parentElement) {
      successDiv.remove();
    }
  }, 4000);
}

// Modal xem l·ªùi ch√∫c chi ti·∫øt
const wishModalOverlay = document.getElementById('wishModalOverlay');
const wishModalClose = document.getElementById('wishModalClose');
const wishModalBody = document.getElementById('wishModalBody');

function showWishModal(message) {
  wishModalBody.innerHTML = `
    <div class='wish-modal-title'>ƒê√¥i l·ªùi nh·∫Øn nh·ªß t·ªõi em</div>
    <div class='typewriter' id='typewriterText'></div>
    <div class='wish-signature' id='wishSignature' style='display:none;'>
      <span class='wish-signature-inner' id='signTypewriter'></span>
    </div>
    <div class='signature-container' id='signatureContainer' style='display:none;'>
      <img src='sign.png' class='signature-img' id='signatureImg' alt='Ch·ªØ k√Ω AECK'/>
      <svg class='pen' id='penSVG' viewBox='0 0 48 48'>
        <image href='pen.png' width='48' height='48'/>
      </svg>
    </div>
  `;
  wishModalOverlay.classList.add('show');
  document.body.style.overflow = 'hidden';
  // Hi·ªáu ·ª©ng ƒë√°nh m√°y n·ªôi dung ch√≠nh
  const text = `Hi em! V·∫≠y l√† chuy·∫øn t√†u thanh xu√¢n c·ªßa ch√∫ng ta s·∫Øp d·ª´ng l·∫°i v√† m·ªôt ch·∫∑ng ƒë∆∞·ªùng m·ªõi s·∫Øp m·ªü ra. Hi v·ªçng ch√∫ng ta ƒë√£ c√≥ nh·ªØng gi√¢y ph√∫t ƒë·∫πp khi ƒë∆∞·ª£c ƒë·ªìng h√†nh c√πng nhau trong qu√£ng th·ªùi gian v·ª´a r·ªìi. Sau c√πng, ${message} Ch√∫c ch·∫∑ng ƒë∆∞·ªùng s·∫Øp t·ªõi c·ªßa em ng√†y c√†ng r·ª±c r·ª° v√† th√†nh c√¥ng h∆°n nh√©!`;
  typeWriterEffect('typewriterText', text, 0, 80, () => {
    document.getElementById('wishSignature').style.display = '';
    // Hi·ªáu ·ª©ng ƒë√°nh m√°y cho d√≤ng k√Ω t√™n
    typeWriterEffect('signTypewriter', 'ƒê·∫°i di·ªán <b>AECK</b> - Anh T√∫', 0, 40, () => {
      document.getElementById('signatureContainer').style.display = '';
      animateSignature();
    });
  });
}

function typeWriterEffect(elementId, text, i, speed, callback) {
  const el = document.getElementById(elementId);
  if (!el) return;
  if (i <= text.length) {
    el.innerHTML = text.slice(0, i) + '<span style="border-right:2px solid #764ba2;">&nbsp;</span>';
    setTimeout(() => typeWriterEffect(elementId, text, i + 1, speed, callback), speed);
  } else {
    el.innerHTML = text;
    if (callback) callback();
  }
}

// Animation b√∫t m√°y v√† ch·ªØ k√Ω
function animateSignature() {
  const pen = document.getElementById('penSVG');
  const signImg = document.getElementById('signatureImg');
  if (!pen || !signImg) return;
  // Path m√¥ ph·ªèng ƒë∆∞·ªùng k√Ω (t·ª´ tr√™n xu·ªëng d∆∞·ªõi, dao ƒë·ªông tr√°i ph·∫£i)
  const pathLength = 80; // chi·ªÅu cao ·∫£nh ch·ªØ k√Ω
  let progress = 0;
  signImg.style.opacity = 1;
  signImg.style.maskImage = signImg.style.webkitMaskImage = `linear-gradient(180deg, #000 0%, transparent 0%)`;
  function step() {
    progress += 0.5; // t·ªëc ƒë·ªô v·∫Ω
    if (progress > pathLength) progress = pathLength;
    // Dao ƒë·ªông tr√°i ph·∫£i theo h√¨nh sin
    const amplitude = 30; // px
    const frequency = 2; // s·ªë l·∫ßn l·∫Øc
    const offsetX = 100 + Math.sin(progress / pathLength * Math.PI * frequency) * amplitude;
    pen.style.transform = `translate(${offsetX}px, ${progress}px)`;
    // L·ªô d·∫ßn ch·ªØ k√Ω theo chi·ªÅu d·ªçc
    signImg.style.maskImage = signImg.style.webkitMaskImage = `linear-gradient(180deg, #000 0%, #000 ${progress/pathLength*100}%, transparent ${progress/pathLength*100}%)`;
    if (progress < pathLength) {
      requestAnimationFrame(step);
    } else {
      pen.style.opacity = 0;
      signImg.style.maskImage = signImg.style.webkitMaskImage = 'none';
    }
  }
  pen.style.opacity = 1;
  requestAnimationFrame(step);
}

function hideWishModal() {
  wishModalOverlay.classList.remove('show');
  document.body.style.overflow = 'auto';
}

wishModalClose.addEventListener('click', hideWishModal);
wishModalOverlay.addEventListener('click', function(e) {
  if (e.target === wishModalOverlay) hideWishModal();
});

// G·∫Øn s·ª± ki·ªán click cho t·ª´ng li sau khi render
function attachWishModalEvents() {
  const ul = document.getElementById('gratitude-list');
  Array.from(ul.children).forEach(li => {
    li.style.cursor = 'pointer';
    li.onclick = function() {
      // L·∫•y n·ªôi dung l·ªùi ch√∫c (b·ªè s·ªë th·ª© t·ª± v√† icon)
      const msg = li.textContent.replace(/^\s*\d+\./, '').replace(/^\s*\S+\s*/, '').trim();
      showWishModal(msg);
    };
  });
}

// Hi·ªÉn th·ªã danh s√°ch m·∫∑c ƒë·ªãnh (lu√¥n ·ªü ƒë·∫ßu)
function showDefaultMessages() {
  const ul = document.getElementById('gratitude-list');
  ul.innerHTML = '';
  const icons = ["‚ù§Ô∏è", "üåü", "üéâ", "‚ú®", "üçÄ", "üéì", "üíñ", "ü•á", "üåà", "ü¶ã", "üåª", "üíê", "üß°", "üéµ", "üéà", "üå∫"];
  messages.forEach((msg, i) => {
    const li = document.createElement('li');
    li.innerHTML = `<span class='stt'>${i + 1}.</span> <span class=\"icon\">${icons[i%icons.length]}</span> ` + msg;
    li.style.setProperty('--delay', `${i*0.04+0.1}s`);
    ul.appendChild(li);
  });
  attachWishModalEvents();
}

// Load danh s√°ch h·ªçc sinh t·ª´ Firebase (real-time, append xu·ªëng cu·ªëi)
function loadStudentsFromFirebaseRealtime() {
  const ul = document.getElementById('gratitude-list');
  showDefaultMessages();
  db.collection('students')
    .orderBy('timestamp', 'asc')
    .limit(50)
    .onSnapshot(snapshot => {
      while (ul.children.length > messages.length) {
        ul.removeChild(ul.lastChild);
      }
      let stt = messages.length;
      snapshot.forEach(doc => {
        const student = doc.data();
        stt++;
        addStudentToList(student, true, stt);
      });
      attachWishModalEvents();
    }, error => {
      console.error('L·ªói khi l·∫Øng nghe d·ªØ li·ªáu:', error);
    });
}

// Th√™m h·ªçc sinh v√†o danh s√°ch hi·ªÉn th·ªã (append cu·ªëi, c√≥ s·ªë th·ª© t·ª±)
function addStudentToList(student, noDelay, stt) {
  const ul = document.getElementById('gratitude-list');
  const icons = ["‚ù§Ô∏è", "üåü", "üéâ", "‚ú®", "üçÄ", "üéì", "üíñ", "ü•á", "üåà", "ü¶ã", "üåª", "üíê", "üß°", "üéµ", "üéà", "üå∫"];
  const li = document.createElement('li');
  const iconIndex = Math.floor(Math.random() * icons.length);
  const message = `AECK ch√∫c em ${student.name} thi t·ªët v√† ƒë·ªó ${student.wish}.`;
  li.innerHTML = `<span class='stt'>${stt}.</span> <span class=\"icon\">${icons[iconIndex]}</span> ${message}`;
  li.style.setProperty('--delay', noDelay ? '0s' : '0.1s');
  li.style.opacity = '0';
  li.style.transform = 'translateY(30px)';
  ul.appendChild(li); // lu√¥n th√™m v√†o cu·ªëi
  setTimeout(() => {
    li.style.animation = 'fadeInUp 0.7s forwards';
  }, 100);
}

// Hi·ªáu ·ª©ng n·ªÅn tr√°i tim bay
const canvas = document.querySelector('.hearts-bg');
const ctx = canvas.getContext('2d');
let hearts = [];

function resizeCanvas() {
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
}

window.addEventListener('resize', resizeCanvas);
resizeCanvas();

function randomHeart() {
  return {
    x: Math.random() * canvas.width,
    y: canvas.height + 20 + Math.random() * 40,
    size: 16 + Math.random() * 18,
    speed: 0.5 + Math.random() * 1.2,
    drift: (Math.random() - 0.5) * 0.7,
    alpha: 0.18 + Math.random() * 0.18,
    color: Math.random() > 0.5 ? '#fda085' : '#f6d365',
  };
}

for (let i = 0; i < 50; i++) hearts.push(randomHeart());

function drawHeart(x, y, size, color, alpha) {
  ctx.save();
  ctx.globalAlpha = alpha;
  ctx.fillStyle = color;
  ctx.beginPath();
  ctx.moveTo(x, y + size * 0.3);
  ctx.bezierCurveTo(x, y, x - size / 2, y, x - size / 2, y + size * 0.3);
  ctx.bezierCurveTo(x - size / 2, y + size * 0.7, x, y + size * 0.9, x, y + size * 1.2);
  ctx.bezierCurveTo(x, y + size * 0.9, x + size / 2, y + size * 0.7, x + size / 2, y + size * 0.3);
  ctx.bezierCurveTo(x + size / 2, y, x, y, x, y + size * 0.3);
  ctx.closePath();
  ctx.fill();
  ctx.restore();
}

function animateHearts() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  for (let h of hearts) {
    drawHeart(h.x, h.y, h.size, h.color, h.alpha);
    h.y -= h.speed;
    h.x += h.drift;
    if (h.y < -40 || h.x < -40 || h.x > canvas.width + 40) {
      Object.assign(h, randomHeart());
      h.y = canvas.height + 20;
    }
  }
  requestAnimationFrame(animateHearts);
}

animateHearts();

// Danh s√°ch l·ªùi ch√∫c m·∫∑c ƒë·ªãnh
const messages = [
  "AECK ch√∫c em ƒêinh Th·ªã H∆∞∆°ng Thu·ª≥ thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em Ho√†ng Tu·∫•n ƒê·∫°t thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em Th√†nh Nguy·ªÖn thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em V≈© Huy·ªÅn thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em Nguy·ªÖn T·∫•n Ph√°t thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em Tr·ªãnh Phong thi t·ªët v√† ƒë·ªó EE2.",
  "AECK ch√∫c em Nguy·ªÖn Th·ªã Thu√Ω Hi·ªÅn thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em Do√£n H∆∞ng thi t·ªët v√† ƒë·ªó ME-E1 HUST.",
  "AECK ch√∫c em M·∫°nh Tu·∫•n thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em Ph∆∞∆°ng Anh thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em Minh Huy·ªÅn thi t·ªët v√† ƒë·ªó MI1.",
  "AECK ch√∫c em Ho√†ng H√πng thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em Ng√¥ Huy Ho√†ng thi t·ªët v√† ƒë·ªó ULIS 2 (UET).",
  "AECK ch√∫c em Nguy·ªÖn Ti·∫øn Minh Nh·∫≠t thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em Nguy·ªÖn H∆∞ng thi t·ªët v√† ƒë·ªó EE1.",
  "AECK ch√∫c em Nh·∫≠t Long thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em Nghi√™m ƒê·∫°i thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em Vi·ªát Anh thi t·ªët v√† ƒë·ªó TO1.",
  "AECK ch√∫c em Vi·ªát L√¢n thi t·ªët v√† ƒë·ªó KMA.",
  "AECK ch√∫c em L√™ Tu·∫•n Anh thi t·ªët v√† ƒë·ªó ET1.",
  "AECK ch√∫c em Th√°i H√† thi t·ªët v√† ƒë·ªó ME2.",
  "AECK ch√∫c b·∫°n ƒêo√†n Duy thi t·ªët v√† ƒë·ªó NEU.",
  "AECK ch√∫c em An Huy thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em Mai Nhung thi t·ªët v√† ƒë·ªó MS2.",
  "AECK ch√∫c em T√∫ Khanh thi t·ªët v√† ƒë·ªó CHx.",
  "AECK ch√∫c em Nguy·ªÖn Th√†nh ƒê·∫°t thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em Ph·∫°m Duy Quy·ªÅn thi t·ªët v√† ƒë·ªó HUST.",
  "AECK ch√∫c em Nguy·ªÖn B√° Vi·ªát D≈©ng thi t·ªët v√† ƒë·ªó MI1.",
  "AECK ch√∫c em Kh∆∞u Minh thi t·ªët v√† ƒë·ªó HMU.",
  "AECK ch√∫c em Tr·∫ßn Phi H√πng thi t·ªët v√† ƒë·ªó TE2.",
  "AECK ch√∫c em Kh√°nh H√† thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em Nguy·ªÖn Ti·∫øn Th√†nh thi t·ªët v√† ƒë·ªó HUST.",
  "AECK ch√∫c em L√™ Minh ƒê·ª©c thi t·ªët v√† ƒë·ªó FL1-HUST.",
  "AECK ch√∫c em Tr·ªãnh Tu·∫•n Ki·ªát thi t·ªët v√† ƒë·ªó HUST.",
  "AECK ch√∫c em Tr·∫ßn Th·∫ø B·∫£o thi t·ªët v√† ƒë·ªó HUST.",
  "AECK ch√∫c em ƒê√¨nh Ch√≠ thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em Mai Trung Hi·∫øu thi t·ªët v√† ƒë·ªó EE1-HUST.",
  "AECK ch√∫c em Tr·ªãnh VƒÉn ƒê·∫°t thi t·ªët v√† ƒë·ªó EE1-HUST.",
  "AECK ch√∫c em Nguy·ªÖn Minh ƒê√¥ng thi t·ªët v√† ƒë·ªó FPT.",
  "AECK ch√∫c em L√™ Vi·ªát H√πng thi t·ªët v√† ƒë·ªó MTA.",
  "AECK ch√∫c em Tr·ªãnh Tu·∫•n Ki·ªát thi t·ªët v√† ƒë·ªó ME2-HUST.",
  "AECK ch√∫c em Dong Phuong Anh thi t·ªët v√† ƒë·ªó HUST.",
  "AECK ch√∫c em Phong Nguy·ªÖn ƒë·ªó IT-E7 HUST.",
  "AECK ch√∫c em Nguy·ªÖn Ng·ªçc Tu·∫•n Anh thi t·ªët v√† ƒë·ªó HUST.",
  "AECK ch√∫c em VƒÉn An thi t·ªët v√† ƒë·ªó IT-E10.",
  "AECK ch√∫c em Nguy·ªÖn B√° Vi·ªát D≈©ng thi t·ªët v√† ƒë·ªó MI1.",
  "AECK ch√∫c em Nguy·ªÖn VƒÉn T√†i thi t·ªët v√† ƒë·ªó ME2-HUST.",
  "AECK ch√∫c em Tr·∫ßn Th·ªã H·ªìng Anh thi t·ªët v√† ƒë·ªó PH3-HUST.",
  "AECK ch√∫c em Vi Minh thi t·ªët v√† ƒë·ªó HUP.",
  "AECK ch√∫c em Nguy·ªÖn Vi·ªát ƒê·ª©c thi t·ªët v√† ƒë·ªó MS2-HUST.",
  "AECK ch√∫c em L√™ Thi·ªán Gi√°p thi t·ªët v√† ƒë·ªó IT-E15.",
  "AECK ch√∫c em L√™ Vƒ©nh Ph∆∞·ªõc thi t·ªët l√† ƒë·ªó HNUE.",
  "AECK ch√∫c em Nguy·ªÖn Anh Tu·∫•n thi t·ªët v√† ƒë·ªó IT-E10 HUST.",
  "AECK ch√∫c em B·∫£o H√¢n thi t·ªët v√† ƒë·ªó ET2-HUST.",
  "AECK ch√∫c em ƒêinh Th·ªã H∆∞∆°ng Thu·ª≥ thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em Minh Anh thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em Ng√¥ Hi·∫øu thi t·ªët v√† ƒë·ªó IT-E6.",
  "AECK ch√∫c em H√† Th·∫£o Trang thi t·ªët v√† ƒë·ªó EE2.",
  "AECK ch√∫c em Tr·∫ßn V≈© ƒê·ª©c thi t·ªët v√† ƒë·ªó IT2-HUST.",
  "AECK ch√∫c em L√™ Minh Nghƒ©a thi t·ªët v√† ƒë·ªó NEU.",
  "AECK ch√∫c em Nguy·ªÖn Mƒ© An thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em Nguy·ªÖn Qu·ªëc V·ªØng thi t·ªët v√† ƒë·ªó EM2.",
  "AECK ch√∫c em Nguy·ªÖn Ti·∫øn Ph√∫ thi t·ªët v√† ƒë·ªó HUST.",
  "AECK ch√∫c em Tr·∫ßn ƒê√¨nh Minh Nh·∫≠t thi t·ªët v√† t·ªïng 4 m√¥n 36 ƒëi·ªÉm.",
  "AECK ch√∫c Linh Linh thi t·ªët v√† ƒë·ªó nguy·ªán v·ªçng 1.",
  "AECK ch√∫c em L·∫°i ƒê·ª©c Phong thi t·ªët v√† ƒë·ªó MTA.",
  "AECK ch√∫c em Ho√†ng Xu√¢n Minh Ng·ªçc thi t·ªët v√† ƒë·ªó HMU.",
  "AECK ch√∫c em ƒê√†o Nh·∫•t thi t·ªët v√† ƒë·ªó HUST.",
  "AECK ch√∫c em Minh ƒêinh Xu√¢n thi t·ªët v√† ƒë·ªó IT1-HUST."
];

// Th√™m CSS cho s·ªë th·ª© t·ª±
(function addSTTStyle() {
  const style = document.createElement('style');
  style.innerHTML = `.stt { display:inline-block; min-width:2em; font-weight:bold; color:#764ba2; font-size:1.1em; margin-right:6px; }`;
  document.head.appendChild(style);
})();

// --- T√¨m ki·∫øm l·ªùi ch√∫c ---
const searchInput = document.getElementById('searchInput');
let allWishes = [];

function renderWishes(list) {
  const ul = document.getElementById('gratitude-list');
  ul.innerHTML = '';
  list.forEach((item, i) => {
    const li = document.createElement('li');
    li.innerHTML = `<span class='stt'>${item.stt}.</span> <span class="icon">${item.icon}</span> ${item.text}`;
    li.style.setProperty('--delay', `${i*0.04+0.1}s`);
    ul.appendChild(li);
  });
  attachWishModalEvents();
}

function updateAllWishes() {
  allWishes = [];
  // L·ªùi ch√∫c m·∫∑c ƒë·ªãnh
  const icons = ["‚ù§Ô∏è", "üåü", "üéâ", "‚ú®", "üçÄ", "üéì", "üíñ", "ü•á", "üåà", "ü¶ã", "üåª", "üíê", "üß°", "üéµ", "üéà", "üå∫"];
  messages.forEach((msg, i) => {
    allWishes.push({
      stt: i + 1,
      icon: icons[i % icons.length],
      text: msg,
      type: 'default'
    });
  });
  // L·ªùi ch√∫c h·ªçc sinh ghi danh
  db.collection('students').orderBy('timestamp', 'asc').get().then(snapshot => {
    let stt = messages.length;
    snapshot.forEach(doc => {
      const student = doc.data();
      stt++;
      const message = `AECK ch√∫c em ${student.name} thi t·ªët v√† ƒë·ªó ${student.wish}.`;
      allWishes.push({
        stt,
        icon: icons[Math.floor(Math.random() * icons.length)],
        text: message,
        type: 'student',
        name: student.name,
        wish: student.wish
      });
    });
    renderWishes(allWishes);
  });
}

searchInput.addEventListener('input', function() {
  const q = this.value.trim().toLowerCase();
  if (!q) {
    renderWishes(allWishes);
    return;
  }
  const filtered = allWishes.filter(item =>
    item.text.toLowerCase().includes(q) ||
    (item.name && item.name.toLowerCase().includes(q)) ||
    (item.wish && item.wish.toLowerCase().includes(q)) ||
    (item.stt + '').includes(q)
  );
  renderWishes(filtered);
});

document.addEventListener('DOMContentLoaded', function() {
  updateAllWishes();
});

// --- Modal g·ª≠i l·ªùi nh·∫Øn c·∫£m ∆°n AECK ---
const thankBtn = document.getElementById('thankBtn');
const thankModalOverlay = document.getElementById('thankModalOverlay');
const closeThankModal = document.getElementById('closeThankModal');
const thankFormModal = document.getElementById('thankFormModal');
const thankInputModal = document.getElementById('thankInputModal');
const thankListModal = document.getElementById('thankListModal');

thankBtn.addEventListener('click', function() {
  thankModalOverlay.classList.add('show');
  document.body.style.overflow = 'hidden';
});
closeThankModal.addEventListener('click', function() {
  thankModalOverlay.classList.remove('show');
  document.body.style.overflow = 'auto';
});
thankModalOverlay.addEventListener('click', function(e) {
  if (e.target === thankModalOverlay) {
    thankModalOverlay.classList.remove('show');
    document.body.style.overflow = 'auto';
  }
});

function renderThanksModal(thanks) {
  thankListModal.innerHTML = '';
  if (thanks.length === 0) {
    thankListModal.innerHTML = '<div style="color:#aaa;text-align:center;">Ch∆∞a c√≥ l·ªùi nh·∫Øn n√†o...</div>';
    return;
  }
  thanks.slice().reverse().forEach(msg => {
    const div = document.createElement('div');
    div.className = 'thank-item';
    div.textContent = msg.text;
    thankListModal.appendChild(div);
  });
}

function loadThanksModalRealtime() {
  db.collection('thanks').orderBy('timestamp','desc').limit(30).onSnapshot(snapshot => {
    const thanks = [];
    snapshot.forEach(doc => {
      thanks.push(doc.data());
    });
    renderThanksModal(thanks);
  });
}

thankFormModal.addEventListener('submit', async function(e) {
  e.preventDefault();
  const text = thankInputModal.value.trim();
  if (!text) return;
  thankInputModal.disabled = true;
  thankFormModal.querySelector('.btn-submit').textContent = 'ƒêang g·ª≠i...';
  try {
    await db.collection('thanks').add({
      text,
      timestamp: firebase.firestore.FieldValue.serverTimestamp()
    });
    thankInputModal.value = '';
    alert('L·ªùi nh·∫Øn c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c g·ª≠i t·ªõi AECK!');
  } catch (err) {
    alert('G·ª≠i th·∫•t b·∫°i, th·ª≠ l·∫°i sau!');
  }
  thankInputModal.disabled = false;
  thankFormModal.querySelector('.btn-submit').textContent = 'G·ª≠i l·ªùi nh·∫Øn üíå';
});

document.addEventListener('DOMContentLoaded', function() {
  loadThanksModalRealtime();
});

const finalBtn = document.getElementById('finalBtn');
finalBtn.addEventListener('click', function() {
  window.open('./loi_chuc/index.html', '_blank');
}); 